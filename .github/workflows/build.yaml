name: Build

on:
    push: ~
    pull_request: ~
    release:
        types: [created]
    schedule:
        -
            cron: "0 1 * * 6" # Run at 1am every Saturday
    workflow_dispatch: ~

jobs:
    tests:
        runs-on: ubuntu-22.04

        name: "Sylius ${{ matrix.sylius }}, PHP ${{ matrix.php }}, Symfony ${{ matrix.symfony }}, MySQL ${{ matrix.mysql }}, wkhtmltopdf: ${{ matrix.wkhtmltopdf }}, State Machine Adapter ${{ matrix.state_machine_adapter }}"

        strategy:
            fail-fast: false
            matrix:
                php: ["8.2", "8.3"]
                symfony: ["^6.4", "^7.1"]
                sylius: ["2.0.x-dev"]
                node: ["20.x"]
                mysql: ["8.4"]
                wkhtmltopdf: ["0.12.6-1", false]
                state_machine_adapter: [ "symfony_workflow" ]

                include:
                    -
                        php: "8.3"
                        symfony: "^7.1"
                        sylius: "2.0.x-dev"
                        node: "20.x"
                        mysql: "8.4"
                        wkhtmltopdf: "0.12.6-1"
                        state_machine_adapter: "winzou_state_machine"

        env:
            APP_ENV: test
            DATABASE_URL: "mysql://root:root@127.0.0.1/sylius?serverVersion=${{ matrix.mysql }}"
            TEST_SYLIUS_STATE_MACHINE_ADAPTER: "${{ matrix.state_machine_adapter }}"

        steps:
            -
                uses: actions/checkout@v4

            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: "${{ matrix.php }}"
                    extensions: intl
                    tools: symfony
                    coverage: none

            -
                name: Setup Node
                uses: actions/setup-node@v4
                with:
                    node-version: "${{ matrix.node }}"

            -
                name: Shutdown default MySQL
                run: sudo service mysql stop

            -
                name: Setup MySQL
                uses: mirromutth/mysql-action@v1.1
                with:
                    mysql version: "${{ matrix.mysql }}"
                    mysql root password: "root"

            -
                name: Setup cache for wkhtmltopdf
                uses: actions/cache@v4
                id: cache-wkhtmltopdf
                if: matrix.wkhtmltopdf != false
                with:
                    path: /usr/local/bin/wkhtmltopdf
                    key: wkhtmltopdf-${{ matrix.wkhtmltopdf }}

            -
                name: Install wkthtmltopdf
                if: matrix.wkhtmltopdf != false && steps.cache-wkhtmltopdf.outputs.cache-hit != 'true'
                run: |
                    sudo apt-get install -y xfonts-base xfonts-75dpi
                    wget https://github.com/wkhtmltopdf/packaging/releases/download/${{ matrix.wkhtmltopdf }}/wkhtmltox_${{ matrix.wkhtmltopdf }}.focal_amd64.deb
                    sudo dpkg -i wkhtmltox_${{ matrix.wkhtmltopdf }}.focal_amd64.deb

            -
                name: Disable PDF generation
                if: matrix.wkhtmltopdf == false
                run: |
                    mv tests/Application/etc/sylius_invoicing_pdf_generation_disabled.yaml tests/Application/config/packages

            -
                name: Get Composer cache directory
                id: composer-cache
                run: echo "dir=$(composer config cache-files-dir)" >> $GITHUB_OUTPUT

            -
                name: Cache Composer
                uses: actions/cache@v4
                with:
                    path: ${{ steps.composer-cache.outputs.dir }}
                    key: ${{ runner.os }}-php-${{ matrix.php }}-composer-${{ hashFiles('**/composer.json **/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-${{ matrix.php }}-composer-

            -
                name: Restrict Symfony version
                if: matrix.symfony != ''
                run: |
                    composer global config --no-plugins allow-plugins.symfony/flex true
                    composer global require --no-progress --no-scripts --no-plugins "symfony/flex:^1.10"
                    composer config extra.symfony.require "${{ matrix.symfony }}"

            -
                name: Restrict Sylius version
                if: matrix.sylius != ''
                run: composer require "sylius/sylius:${{ matrix.sylius }}" --no-update --no-scripts --no-interaction

            -
                name: Require Winzou State Machine
                if: "${{ matrix.state_machine_adapter == 'winzou_state_machine' }}"
                run: |
                  composer require winzou/state-machine:^0.4 --no-update   
                  composer require winzou/state-machine-bundle:^0.6 --no-update   

            -
                name: Install PHP dependencies
                run: composer install --no-interaction --no-scripts

            -
                name: Get Yarn cache directory
                id: yarn-cache
                run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT

            -
                name: Cache Yarn
                uses: actions/cache@v4
                with:
                    path: ${{ steps.yarn-cache.outputs.dir }}
                    key: ${{ runner.os }}-node-${{ matrix.node }}-yarn-${{ hashFiles('**/package.json **/yarn.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-node-${{ matrix.node }}-yarn-

            -
                name: Install JS dependencies
                run: (cd tests/Application && yarn install)

            -
                name: Prepare test application database
                run: |
                    (cd tests/Application && bin/console doctrine:database:create -vvv)
                    (cd tests/Application && bin/console doctrine:migrations:migrate -n -vvv -q)

            -
                name: Prepare test application assets
                run: |
                    (cd tests/Application && bin/console assets:install public -vvv)
                    (cd tests/Application && yarn build:prod)

            -
                name: Prepare test application cache
                run: (cd tests/Application && bin/console cache:warmup -vvv)

            -
                name: Load fixtures in test application
                run: (cd tests/Application && bin/console sylius:fixtures:load -n)

            -
                name: Run security check
                run: symfony security:check

#            -
#                name: Run analysis
#                run: composer analyse

            -
                name: Run PHPSpec
                run: vendor/bin/phpspec run --ansi -f progress --no-interaction

            -
                name: Run PHPUnit
                run: vendor/bin/phpunit --colors=always

            -
                name: Run Behat
                run: |
                    if [ "${{ matrix.wkhtmltopdf }}" != "false" ]; then
                        vendor/bin/behat --colors --strict -vvv --no-interaction -f progress --tags="~@pdf_disabled" || vendor/bin/behat --colors --strict -vvv --no-interaction -f progress --rerun;
                    else
                        vendor/bin/behat --colors --strict -vvv --no-interaction -f progress --tags="~@pdf_enabled" || vendor/bin/behat --colors --strict -vvv --no-interaction -f progress --rerun;
                    fi

            -
                name: Upload Behat logs
                uses: actions/upload-artifact@v4
                if: failure()
                with:
                    name: Behat logs
                    path: etc/build/
                    if-no-files-found: ignore
